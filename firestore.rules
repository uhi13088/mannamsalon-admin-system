rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ===================================================================
    // 인증된 사용자만 접근 가능하도록 기본 규칙 설정
    // ===================================================================
    
    // users 컬렉션: 본인 데이터만 읽기/쓰기 가능, 관리자는 모든 직원 정보 읽기 가능
    match /users/{userId} {
      // 본인 데이터 읽기: 인증된 사용자는 자신의 문서를 항상 읽을 수 있음
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // 다른 사용자 데이터 읽기: 관리자만 가능 (본인 문서를 이미 읽을 수 있으므로 순환 참조 없음)
      allow read: if request.auth != null && 
                     request.auth.uid != userId && 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // 본인 데이터 쓰기: 본인만 가능
      allow write: if request.auth != null && request.auth.uid == userId;
      
      // 신규 가입: 인증된 사용자는 자신의 문서 생성 가능
      allow create: if request.auth != null && request.auth.uid == userId;
    }
    
    // employees 컬렉션: 관리자와 본인만 읽기 가능
    match /employees/{employeeId} {
      allow read: if request.auth != null && 
                     (request.auth.uid == employeeId || 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      
      // 쓰기는 관리자만 가능
      allow write: if request.auth != null && 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // 신규 가입 시 본인 생성 가능
      allow create: if request.auth != null && request.auth.uid == employeeId;
    }
    
    // attendance 컬렉션: 인증된 사용자 읽기, 본인 또는 관리자만 쓰기
    match /attendance/{attendanceId} {
      // 읽기: 인증된 사용자 (본인 또는 관리자)
      allow read: if request.auth != null;
      
      // 쓰기: 본인의 출퇴근 기록이거나 관리자
      allow write: if request.auth != null && 
                      (request.resource.data.userId == request.auth.uid || 
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // salaries 컬렉션: 본인 또는 관리자만 읽기/쓰기
    match /salaries/{salaryId} {
      // 읽기: 본인의 급여 정보이거나 관리자
      allow read: if request.auth != null && 
                     (resource.data.userId == request.auth.uid || 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      
      // 쓰기: 관리자만 가능
      allow write: if request.auth != null && 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // approvals 컬렉션: 본인 또는 관리자만 읽기/쓰기
    match /approvals/{approvalId} {
      // 읽기: 본인의 승인 요청이거나 관리자
      allow read: if request.auth != null && 
                     (resource.data.userId == request.auth.uid || 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      
      // 생성: 인증된 사용자 (직원이 승인 요청 생성)
      allow create: if request.auth != null && 
                       request.resource.data.userId == request.auth.uid;
      
      // 수정: 관리자만 (승인/거부)
      allow update: if request.auth != null && 
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // 삭제: 본인 또는 관리자
      allow delete: if request.auth != null && 
                       (resource.data.userId == request.auth.uid || 
                        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // notices 컬렉션: 모든 인증된 사용자 읽기, 관리자만 쓰기
    match /notices/{noticeId} {
      // 읽기: 인증된 사용자 모두
      allow read: if request.auth != null;
      
      // 쓰기: 관리자만
      allow write: if request.auth != null && 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // 기타 모든 컬렉션: 관리자만 접근
    match /{document=**} {
      allow read, write: if request.auth != null && 
                            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
